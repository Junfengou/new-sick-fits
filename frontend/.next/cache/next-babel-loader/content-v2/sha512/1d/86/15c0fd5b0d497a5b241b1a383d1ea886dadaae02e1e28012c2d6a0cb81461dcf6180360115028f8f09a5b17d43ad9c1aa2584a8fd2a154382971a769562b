{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Checkout.js\";\nimport styled from \"styled-components\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { useState } from \"react\";\nimport nProgress from \"nprogress\";\nimport SickButton from \"./styles/SickButton\";\nimport gql from \"graphql-tag\";\nimport { GraphQLError } from \"graphql\";\nimport { useMutation } from \"@apollo/client\";\nconst CREATE_ORDER_MUTATION = gql`\n\tmutation CREATE_ORDER_MUTATION($token: String!) {\n\t\tcheckout(token: $token) {\n\t\t\tid\n\t\t\tcharge\n\t\t\ttotal\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, {\n    error: GraphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION);\n\n  async function handleSubmit(e) {\n    // 1. Stop the form from submitting and turn the loader one\n    e.preventDefault();\n    setLoading(true);\n    console.log(\"We gotta do some work..\"); // 2. Start the page transition\n\n    nProgress.start(); // 3. Create the payment method via stripe (Token comes back here if successful)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    console.log({\n      paymentMethod\n    }); // 4. Handle any errors from stripe\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return; // stop the check out from happening\n    } // 5. Send the token from step 3 to our keystone server, via a custom mutation!\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Finished with the order! Here is the order id:  `);\n    console.log({\n      order\n    }); // 6. Change the page to view the order\n    // 7. Close the cart\n    // 8. turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 14\n    }, this), GraphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: GraphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","useState","nProgress","SickButton","gql","GraphQLError","useMutation","CREATE_ORDER_MUTATION","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","handleSubmit","e","preventDefault","console","log","start","paymentMethod","createPaymentMethod","type","card","getElement","done","order","variables","token","id","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n\tCardElement,\r\n\tElements,\r\n\tuseElements,\r\n\tuseStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useState } from \"react\";\r\nimport nProgress from \"nprogress\";\r\nimport SickButton from \"./styles/SickButton\";\r\nimport gql from \"graphql-tag\";\r\nimport { GraphQLError } from \"graphql\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n\tmutation CREATE_ORDER_MUTATION($token: String!) {\r\n\t\tcheckout(token: $token) {\r\n\t\t\tid\r\n\t\t\tcharge\r\n\t\t\ttotal\r\n\t\t\titems {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n\tbox-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n\tborder: 1px solid rgba(0, 0, 0, 0.06);\r\n\tborder-radius: 5px;\r\n\tpadding: 1rem;\r\n\tdisplay: grid;\r\n\tgrid-gap: 1rem;\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\tconst [error, setError] = useState();\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst stripe = useStripe();\r\n\tconst elements = useElements();\r\n\r\n\tconst [checkout, { error: GraphQLError }] = useMutation(\r\n\t\tCREATE_ORDER_MUTATION\r\n\t);\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\t// 1. Stop the form from submitting and turn the loader one\r\n\t\te.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\tconsole.log(\"We gotta do some work..\");\r\n\r\n\t\t// 2. Start the page transition\r\n\t\tnProgress.start();\r\n\r\n\t\t// 3. Create the payment method via stripe (Token comes back here if successful)\r\n\t\tconst { error, paymentMethod } = await stripe.createPaymentMethod({\r\n\t\t\ttype: \"card\",\r\n\t\t\tcard: elements.getElement(CardElement),\r\n\t\t});\r\n\t\tconsole.log({ paymentMethod });\r\n\r\n\t\t// 4. Handle any errors from stripe\r\n\t\tif (error) {\r\n\t\t\tsetError(error);\r\n\t\t\tnProgress.done();\r\n\t\t\treturn; // stop the check out from happening\r\n\t\t}\r\n\r\n\t\t// 5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n\t\tconst order = await checkout({\r\n\t\t\tvariables: {\r\n\t\t\t\ttoken: paymentMethod.id,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconsole.log(`Finished with the order! Here is the order id:  `);\r\n\t\tconsole.log({ order });\r\n\r\n\t\t// 6. Change the page to view the order\r\n\t\t// 7. Close the cart\r\n\r\n\t\t// 8. turn the loader off\r\n\t\tsetLoading(false);\r\n\t\tnProgress.done();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CheckoutFormStyles onSubmit={handleSubmit}>\r\n\t\t\t{error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n\t\t\t{GraphQLError && <p style={{ fontSize: 12 }}>{GraphQLError.message}</p>}\r\n\t\t\t<CardElement />\r\n\t\t\t<SickButton>Check Out Now</SickButton>\r\n\t\t</CheckoutFormStyles>\r\n\t);\r\n}\r\n\r\nfunction Checkout() {\r\n\treturn (\r\n\t\t<Elements stripe={stripeLib}>\r\n\t\t\t<CheckoutForm />\r\n\t\t</Elements>\r\n\t);\r\n}\r\n\r\nexport { Checkout };\r\n"]},"metadata":{},"sourceType":"module"}
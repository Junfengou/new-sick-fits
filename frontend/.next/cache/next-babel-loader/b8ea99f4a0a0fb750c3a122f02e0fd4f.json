{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport { SINGLE_ITEM_QUERY } from \"./SingleProduct\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport DisplayError from \"./ErrorMessage\";\nimport useForm from \"../lib/useForm\";\nconst UPDATE_PRODUCT_MUTATION = gql`\n\tmutation UPDATE_PRODUCT_MUTATION(\n\t\t$id: ID!\n\t\t$name: String\n\t\t$description: String\n\t\t$price: Int\n\t) {\n\t\tupdateProduct(\n\t\t\tid: $id\n\t\t\tdata: { id: $id, name: $name, description: $description, price: $price }\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t}\n\t}\n`;\n\nfunction UpdateProduct({\n  id\n}) {\n  // 1. Get the existing product\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const {\n    Product: {\n      description,\n      name,\n      price\n    }\n  } = data; // 2. Get the mutation to update the product\n\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id // TODO: pass in updates to products here\n\n    }\n  }); // 3. Get the form to handle the updates\n\n  const {\n    inputs,\n    handleChange,\n    resetForm,\n    clearForm\n  } = useForm(data);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault(); // Handle submit\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"name\",\n        value: inputs.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"price\",\n        value: inputs.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        placeholder: \"description\",\n        value: inputs.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\nexport default UpdateProduct;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["React","gql","Form","SINGLE_ITEM_QUERY","useMutation","useQuery","DisplayError","useForm","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","loading","error","variables","Product","description","name","price","updateProduct","updateData","updateError","updateLoading","inputs","handleChange","resetForm","clearForm","e","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,uBAAuB,GAAGP,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;;AAmBA,SAASQ,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC9B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACF,iBAAD,EAAoB;AAC5DW,IAAAA,SAAS,EAAE;AACVJ,MAAAA;AADU;AADiD,GAApB,CAAzC;AAKA,QAAM;AACLK,IAAAA,OAAO,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA;AAArB;AADJ,MAEFP,IAFJ,CAP8B,CAW9B;;AACA,QAAM,CACLQ,aADK,EAEL;AAAER,IAAAA,IAAI,EAAES,UAAR;AAAoBP,IAAAA,KAAK,EAAEQ,WAA3B;AAAwCT,IAAAA,OAAO,EAAEU;AAAjD,GAFK,IAGFlB,WAAW,CAACI,uBAAD,EAA0B;AACxCM,IAAAA,SAAS,EAAE;AACVJ,MAAAA,EADU,CAEV;;AAFU;AAD6B,GAA1B,CAHf,CAZ8B,CAsB9B;;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAiDnB,OAAO,CAACI,IAAD,CAA9D;AAEA,sBACC,QAAC,IAAD;AACC,IAAA,QAAQ,EAAE,MAAOgB,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF,GADsB,CAEtB;AACA,KAJF;AAAA,4BAMC,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEf,KAAK,IAAIQ;AAA9B;AAAA;AAAA;AAAA;AAAA,YAND,eAOC;AAAU,MAAA,QAAQ,EAAEC,aAApB;AAAmC,mBAAWA,aAA9C;AAAA,8BACC;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,EAAE,EAAC,MAFJ;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,WAAW,EAAC,MAJb;AAKC,QAAA,KAAK,EAAEC,MAAM,CAACN,IALf;AAMC,QAAA,QAAQ,EAAEO;AANX;AAAA;AAAA;AAAA;AAAA,cAFD,eAWC;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD,eAYC;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,EAAE,EAAC,OAFJ;AAGC,QAAA,IAAI,EAAC,OAHN;AAIC,QAAA,WAAW,EAAC,OAJb;AAKC,QAAA,KAAK,EAAED,MAAM,CAACL,KALf;AAMC,QAAA,QAAQ,EAAEM;AANX;AAAA;AAAA;AAAA;AAAA,cAZD,eAqBC;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBD,eAsBC;AACC,QAAA,EAAE,EAAC,aADJ;AAEC,QAAA,IAAI,EAAC,aAFN;AAGC,QAAA,WAAW,EAAC,aAHb;AAIC,QAAA,KAAK,EAAED,MAAM,CAACP,WAJf;AAKC,QAAA,QAAQ,EAAEQ;AALX;AAAA;AAAA;AAAA;AAAA,cAtBD,eA6BC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyCA;;AAED,eAAef,aAAf","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Form from \"./styles/Form\";\r\nimport { SINGLE_ITEM_QUERY } from \"./SingleProduct\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport DisplayError from \"./ErrorMessage\";\r\nimport useForm from \"../lib/useForm\";\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n\tmutation UPDATE_PRODUCT_MUTATION(\r\n\t\t$id: ID!\r\n\t\t$name: String\r\n\t\t$description: String\r\n\t\t$price: Int\r\n\t) {\r\n\t\tupdateProduct(\r\n\t\t\tid: $id\r\n\t\t\tdata: { id: $id, name: $name, description: $description, price: $price }\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tdescription\r\n\t\t\tprice\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction UpdateProduct({ id }) {\r\n\t// 1. Get the existing product\r\n\tconst { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t},\r\n\t});\r\n\tconst {\r\n\t\tProduct: { description, name, price },\r\n\t} = data;\r\n\r\n\t// 2. Get the mutation to update the product\r\n\tconst [\r\n\t\tupdateProduct,\r\n\t\t{ data: updateData, error: updateError, loading: updateLoading },\r\n\t] = useMutation(UPDATE_PRODUCT_MUTATION, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t\t// TODO: pass in updates to products here\r\n\t\t},\r\n\t});\r\n\r\n\t// 3. Get the form to handle the updates\r\n\tconst { inputs, handleChange, resetForm, clearForm } = useForm(data);\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={async (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t// Handle submit\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<DisplayError error={error || updateError} />\r\n\t\t\t<fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n\t\t\t\t<label htmlFor=\"name\">name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\t\tvalue={inputs.name}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<label htmlFor=\"name\">price</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tid=\"price\"\r\n\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\tplaceholder=\"price\"\r\n\t\t\t\t\tvalue={inputs.price}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<label htmlFor=\"name\">description</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tplaceholder=\"description\"\r\n\t\t\t\t\tvalue={inputs.description}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\">Update product</button>\r\n\t\t\t</fieldset>\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}
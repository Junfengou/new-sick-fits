{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\n\nfunction useForm(initial = {}) {\n  // create a state object for our input\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState();\n\n  function handleChange(e) {\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [e.target.name]: e.target.value\n    }));\n  } // return the things we want to surface\n\n\n  return {\n    inputs,\n    handleChange\n  };\n}\n\nexport default useForm;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/lib/useForm.js"],"names":["useState","useForm","initial","inputs","setInputs","handleChange","e","target","name","value"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,OAAT,CAAiBC,OAAO,GAAG,EAA3B,EAA+B;AAC9B;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,EAApC;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACxBF,IAAAA,SAAS,iCACLD,MADK;AAER,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFlB,OAAT;AAIA,GAT6B,CAW9B;;;AACA,SAAO;AACNN,IAAAA,MADM;AAENE,IAAAA;AAFM,GAAP;AAIA;;AAED,eAAeJ,OAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useForm(initial = {}) {\r\n\t// create a state object for our input\r\n\tconst [inputs, setInputs] = useState();\r\n\r\n\tfunction handleChange(e) {\r\n\t\tsetInputs({\r\n\t\t\t...inputs,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\t// return the things we want to surface\r\n\treturn {\r\n\t\tinputs,\r\n\t\thandleChange,\r\n\t};\r\n}\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation UPDATE_PRODUCT_MUTATION(\\n\\t\\t$id: ID!\\n\\t\\t$name: String\\n\\t\\t$description: String\\n\\t\\t$price: Int\\n\\t) {\\n\\t\\tupdateProduct(\\n\\t\\t\\tid: $id\\n\\t\\t\\tdata: { id: $id, name: $name, description: $description, price: $price }\\n\\t\\t) {\\n\\t\\t\\tid\\n\\t\\t\\tname\\n\\t\\t\\tdescription\\n\\t\\t\\tprice\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport { SINGLE_ITEM_QUERY } from \"./SingleProduct\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport DisplayError from \"./ErrorMessage\";\nimport useForm from \"../lib/useForm\";\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject());\n\nfunction UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  // 1. Get the existing product\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // 2. Get the mutation to update the product\n\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id // TODO: pass in updates to products here\n\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading; // 3. Get the form to handle the updates\n\n\n  var _useForm = useForm(data),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm,\n      clearForm = _useForm.clearForm;\n\n  console.log(inputs);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault(); // Handle submit\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"name\",\n        value: inputs.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"price\",\n        value: inputs.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        placeholder: \"description\",\n        value: inputs.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n\n_s(UpdateProduct, \"2A0FCKJEMytSwg/kxGPjv2BGu3w=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["React","gql","Form","SINGLE_ITEM_QUERY","useMutation","useQuery","DisplayError","useForm","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","loading","error","updateProduct","updateData","updateError","updateLoading","inputs","handleChange","resetForm","clearForm","console","log","e","preventDefault","name","price","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Form from \"./styles/Form\";\r\nimport { SINGLE_ITEM_QUERY } from \"./SingleProduct\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport DisplayError from \"./ErrorMessage\";\r\nimport useForm from \"../lib/useForm\";\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n\tmutation UPDATE_PRODUCT_MUTATION(\r\n\t\t$id: ID!\r\n\t\t$name: String\r\n\t\t$description: String\r\n\t\t$price: Int\r\n\t) {\r\n\t\tupdateProduct(\r\n\t\t\tid: $id\r\n\t\t\tdata: { id: $id, name: $name, description: $description, price: $price }\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tdescription\r\n\t\t\tprice\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction UpdateProduct({ id }) {\r\n\t// 1. Get the existing product\r\n\tconst { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t},\r\n\t});\r\n\r\n\t// 2. Get the mutation to update the product\r\n\tconst [\r\n\t\tupdateProduct,\r\n\t\t{ data: updateData, error: updateError, loading: updateLoading },\r\n\t] = useMutation(UPDATE_PRODUCT_MUTATION, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t\t// TODO: pass in updates to products here\r\n\t\t},\r\n\t});\r\n\r\n\t// 3. Get the form to handle the updates\r\n\tconst { inputs, handleChange, resetForm, clearForm } = useForm(data);\r\n\tconsole.log(inputs);\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={async (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t// Handle submit\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<DisplayError error={error || updateError} />\r\n\t\t\t<fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n\t\t\t\t<label htmlFor=\"name\">name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\t\tvalue={inputs.name}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<label htmlFor=\"name\">price</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tid=\"price\"\r\n\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\tplaceholder=\"price\"\r\n\t\t\t\t\tvalue={inputs.price}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<label htmlFor=\"name\">description</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tplaceholder=\"description\"\r\n\t\t\t\t\tvalue={inputs.description}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\">Update product</button>\r\n\t\t\t</fieldset>\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery {\\n\\t\\tauthenticatedItem {\\n\\t\\t\\t... on User {\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\temail\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tcart {\\n\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\tquantity\\n\\t\\t\\t\\t\\tproduct {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\tprice\\n\\t\\t\\t\\t\\t\\tname\\n\\t\\t\\t\\t\\t\\tdescription\\n\\t\\t\\t\\t\\t\\tphoto {\\n\\t\\t\\t\\t\\t\\t\\timage {\\n\\t\\t\\t\\t\\t\\t\\t\\tpublicUrlTransformed\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\n/*\r\n\tThis is used in the [ <Nav /> ]\r\n\r\n    It is very important to remember that the [authenticatedItem] returns a union type, meaning it's capable of returning multiple types\r\n    This is keystone specific: \r\n        authenticatedItem\r\n*/\n\nexport var CURRENT_USER_QUERY = gql(_templateObject());\n\nfunction useUser() {\n  _s();\n\n  var _useQuery = useQuery(CURRENT_USER_QUERY),\n      data = _useQuery.data;\n\n  return data === null || data === void 0 ? void 0 : data.authenticatedItem;\n}\n\n_s(useUser, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\nexport default useUser;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/User.js"],"names":["gql","useQuery","CURRENT_USER_QUERY","useUser","data","authenticatedItem"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;;AA2BP,SAASG,OAAT,GAAmB;AAAA;;AAAA,kBACDF,QAAQ,CAACC,kBAAD,CADP;AAAA,MACVE,IADU,aACVA,IADU;;AAElB,SAAOA,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEC,iBAAb;AACA;;GAHQF,O;UACSF,Q;;;AAIlB,eAAeE,OAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\n\r\n/*\r\n\tThis is used in the [ <Nav /> ]\r\n\r\n    It is very important to remember that the [authenticatedItem] returns a union type, meaning it's capable of returning multiple types\r\n    This is keystone specific: \r\n        authenticatedItem\r\n*/\r\n\r\nexport const CURRENT_USER_QUERY = gql`\r\n\tquery {\r\n\t\tauthenticatedItem {\r\n\t\t\t... on User {\r\n\t\t\t\tid\r\n\t\t\t\temail\r\n\t\t\t\tname\r\n\t\t\t\tcart {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tquantity\r\n\t\t\t\t\tproduct {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\tprice\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\tphoto {\r\n\t\t\t\t\t\t\timage {\r\n\t\t\t\t\t\t\t\tpublicUrlTransformed\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction useUser() {\r\n\tconst { data } = useQuery(CURRENT_USER_QUERY);\r\n\treturn data?.authenticatedItem;\r\n}\r\n\r\nexport default useUser;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { SINGLE_ITEM_QUERY } from \"./SingleProduct\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction UpdateProduct({\n  id\n}) {\n  // 1. Get the existing product\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id\n    }\n  });\n  console.log(\"update product: \", data); // 2. Get the mutation to update the product\n  // 3. Get the form to handle the updates\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Update a product \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n\nexport default UpdateProduct;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["React","gql","SINGLE_ITEM_QUERY","useQuery","UpdateProduct","id","data","loading","error","variables","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC9B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BL,QAAQ,CAACD,iBAAD,EAAoB;AAC5DO,IAAAA,SAAS,EAAE;AACVJ,MAAAA;AADU;AADiD,GAApB,CAAzC;AAKAK,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,IAAhC,EAP8B,CAQ9B;AAEA;;AACA,sBACC;AAAA,2BACC;AAAA,sCAAqBD,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;AAED,eAAeD,aAAf","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { SINGLE_ITEM_QUERY } from \"./SingleProduct\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nfunction UpdateProduct({ id }) {\r\n\t// 1. Get the existing product\r\n\tconst { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t},\r\n\t});\r\n\tconsole.log(\"update product: \", data);\r\n\t// 2. Get the mutation to update the product\r\n\r\n\t// 3. Get the form to handle the updates\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Update a product {id}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Products.js\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Product from \"./Product\";\nimport { useQuery } from \"@apollo/client\";\nimport { perPage } from \"../config\";\nexport const ALL_PRODUCTS_QUERY = gql`\n\tquery ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n\t\tallProducts(first: $first, skip: $skip) {\n\t\t\tid\n\t\t\tname\n\t\t\tprice\n\t\t\tdescription\n\t\t\tphoto {\n\t\t\t\tid\n\t\t\t\timage {\n\t\t\t\t\tpublicUrlTransformed\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nconst ProductList = styled.div.withConfig({\n  displayName: \"Products__ProductList\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;gap:60px;\"]);\n\nfunction Products({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }); // console.log(data);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductList, {\n      children: data.allProducts.map(item => /*#__PURE__*/_jsxDEV(Product, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Products;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["React","gql","styled","Product","useQuery","perPage","ALL_PRODUCTS_QUERY","ProductList","div","Products","page","data","error","loading","variables","skip","first","message","allProducts","map","item","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAGL,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMM,WAAW,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,4DAAjB;;AAMA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BT,QAAQ,CAACE,kBAAD,EAAqB;AAC7DQ,IAAAA,SAAS,EAAE;AACVC,MAAAA,IAAI,EAAEL,IAAI,GAAGL,OAAP,GAAiBA,OADb;AAEVW,MAAAA,KAAK,EAAEX;AAFG;AADkD,GAArB,CAAzC,CAD2B,CAO3B;;AACA,MAAIQ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACC;AAAA,2BACC,QAAC,WAAD;AAAA,gBACEN,IAAI,CAACO,WAAL,CAAiBC,GAAjB,CAAsBC,IAAD,iBACrB,QAAC,OAAD;AAAuB,QAAA,IAAI,EAAEA;AAA7B,SAAcA,IAAI,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;AAED,eAAeZ,QAAf","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Product from \"./Product\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { perPage } from \"../config\";\r\n\r\nexport const ALL_PRODUCTS_QUERY = gql`\r\n\tquery ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\r\n\t\tallProducts(first: $first, skip: $skip) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tprice\r\n\t\t\tdescription\r\n\t\t\tphoto {\r\n\t\t\t\tid\r\n\t\t\t\timage {\r\n\t\t\t\t\tpublicUrlTransformed\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst ProductList = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 1fr;\r\n\tgap: 60px;\r\n`;\r\n\r\nfunction Products({ page }) {\r\n\tconst { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tskip: page * perPage - perPage,\r\n\t\t\tfirst: perPage,\r\n\t\t},\r\n\t});\r\n\t// console.log(data);\r\n\tif (loading) return <p>Loading...</p>;\r\n\tif (error) return <p>Error: {error.message}</p>;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProductList>\r\n\t\t\t\t{data.allProducts.map((item) => (\r\n\t\t\t\t\t<Product key={item.id} item={item} />\r\n\t\t\t\t))}\r\n\t\t\t</ProductList>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nconst SINGLE_PRODUCT_QUERY = gql`\n\tquery SINGLE_PRODUCT_QUERY($id: ID!) {\n\t\tProduct(where: { id: $id }) {\n\t\t\tid\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t}\n\t}\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n\tmutation UPDATE_PRODUCT_MUTATION(\n\t\t$id: ID!\n\t\t$name: String\n\t\t$description: String\n\t\t$price: Int\n\t) {\n\t\tupdateProduct(\n\t\t\tid: $id\n\t\t\tdata: { name: $name, description: $description, price: $price }\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t}\n\t}\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  // 1. We need to get the existing product\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  }); // 2. We need to get the mutation to update the product\n\n  const [updateProduct, {\n    data: updateData,\n    errror: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION); // 2.5 Create some state for the form inputs:\n\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.Product);\n  console.log(inputs);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 22\n  }, this); // 3. We need the form to handle the updates\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await updateProduct({\n        variables: {\n          id,\n          name: inputs.name,\n          description: inputs.description,\n          price: inputs.price\n        }\n      }).catch(console.error);\n      console.log(res); // Submit the inputfields to the backend:\n      // TODO: Handle Submit!!!\n      // const res = await createProduct();\n      // clearForm();\n      // // Go to that product's page!\n      // Router.push({\n      //   pathname: `/product/${res.data.createProduct.id}`,\n      // });\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","error","loading","variables","updateProduct","updateData","errror","updateError","updateLoading","inputs","handleChange","clearForm","resetForm","Product","console","log","e","preventDefault","res","name","description","price","catch"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport useForm from \"../lib/useForm\";\r\nimport DisplayError from \"./ErrorMessage\";\r\nimport Form from \"./styles/Form\";\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n\tquery SINGLE_PRODUCT_QUERY($id: ID!) {\r\n\t\tProduct(where: { id: $id }) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tdescription\r\n\t\t\tprice\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n\tmutation UPDATE_PRODUCT_MUTATION(\r\n\t\t$id: ID!\r\n\t\t$name: String\r\n\t\t$description: String\r\n\t\t$price: Int\r\n\t) {\r\n\t\tupdateProduct(\r\n\t\t\tid: $id\r\n\t\t\tdata: { name: $name, description: $description, price: $price }\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tdescription\r\n\t\t\tprice\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n\t// 1. We need to get the existing product\r\n\tconst { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n\t\tvariables: { id },\r\n\t});\r\n\t// 2. We need to get the mutation to update the product\r\n\tconst [\r\n\t\tupdateProduct,\r\n\t\t{ data: updateData, errror: updateError, loading: updateLoading },\r\n\t] = useMutation(UPDATE_PRODUCT_MUTATION);\r\n\t// 2.5 Create some state for the form inputs:\r\n\tconst { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\r\n\tconsole.log(inputs);\r\n\tif (loading) return <p>loading...</p>;\r\n\t// 3. We need the form to handle the updates\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={async (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tconst res = await updateProduct({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t\tname: inputs.name,\r\n\t\t\t\t\t\tdescription: inputs.description,\r\n\t\t\t\t\t\tprice: inputs.price,\r\n\t\t\t\t\t},\r\n\t\t\t\t}).catch(console.error);\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\t// Submit the inputfields to the backend:\r\n\t\t\t\t// TODO: Handle Submit!!!\r\n\t\t\t\t// const res = await createProduct();\r\n\t\t\t\t// clearForm();\r\n\t\t\t\t// // Go to that product's page!\r\n\t\t\t\t// Router.push({\r\n\t\t\t\t//   pathname: `/product/${res.data.createProduct.id}`,\r\n\t\t\t\t// });\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<DisplayError error={error || updateError} />\r\n\t\t\t<fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n\t\t\t\t<label htmlFor=\"name\">\r\n\t\t\t\t\tName\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\tvalue={inputs.name}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<label htmlFor=\"price\">\r\n\t\t\t\t\tPrice\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tid=\"price\"\r\n\t\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\t\tplaceholder=\"price\"\r\n\t\t\t\t\t\tvalue={inputs.price}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<label htmlFor=\"description\">\r\n\t\t\t\t\tDescription\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\tplaceholder=\"Description\"\r\n\t\t\t\t\t\tvalue={inputs.description}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<button type=\"submit\">Update Product</button>\r\n\t\t\t</fieldset>\r\n\t\t</Form>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
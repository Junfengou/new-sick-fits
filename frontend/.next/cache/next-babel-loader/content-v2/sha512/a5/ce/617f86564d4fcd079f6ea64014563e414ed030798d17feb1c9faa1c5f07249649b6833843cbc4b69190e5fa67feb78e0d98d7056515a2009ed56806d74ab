{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Checkout.js\";\nimport styled from \"styled-components\";\nimport SickButtom from \"./styles/SickButton\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { CardElement, Elements, useStripe } from \"@stripe/react-stripe-js\";\nimport { useState } from \"react\";\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]); // If you run into an issue with client request to stripe, just disable any ad-blocker as it may cause issue for request to go back and fort\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\nconst {\n  0: error,\n  1: setError\n} = useState();\nconst {\n  0: loading,\n  1: setLoading\n} = useState(false);\nconst stripe = useStripe();\n\nfunction handleSubmit(e) {\n  // 1. Stop the form from submitting and turn the loader on\n  e.preventDefault(); // 2. Start the page transition\n  // 3. Create the payment method via stripe (Token come back here)\n  // 4. Handle any errors from stripe\n  // 5. Send the token from step 3 to the backend keystone via a custom mutation\n  // 6. Change the page to view the order\n  // 7. Close the cart\n  // 8. Turn the loader off\n}\n\nfunction CheckoutForm() {\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SickButtom, {\n      children: \"Check out now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\nfunction CheckOut() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\nexport default CheckOut;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/Checkout.js"],"names":["styled","SickButtom","loadStripe","CardElement","Elements","useStripe","useState","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","error","setError","loading","setLoading","stripe","handleSubmit","e","preventDefault","CheckoutForm","CheckOut"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,yBAAjD;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,kBAAkB,GAAGP,MAAM,CAACQ,IAAV;AAAA;AAAA;AAAA,8IAAxB,C,CASA;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;AAEA,MAAM;AAAA,KAACC,KAAD;AAAA,KAAQC;AAAR,IAAoBR,QAAQ,EAAlC;AACA,MAAM;AAAA,KAACS,OAAD;AAAA,KAAUC;AAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAMW,MAAM,GAAGZ,SAAS,EAAxB;;AAEA,SAASa,YAAT,CAAsBC,CAAtB,EAAyB;AACxB;AACAA,EAAAA,CAAC,CAACC,cAAF,GAFwB,CAIxB;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;;AAED,SAASC,YAAT,GAAwB;AACvB,sBACC,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEH,YAA9B;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;AAED,SAASI,QAAT,GAAoB;AACnB,sBACC,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEb,SAAlB;AAAA,2BACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;AAED,eAAea,QAAf","sourcesContent":["import styled from \"styled-components\";\r\nimport SickButtom from \"./styles/SickButton\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { CardElement, Elements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { useState } from \"react\";\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n\tbox-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n\tborder: 1px solid rgba(0, 0, 0, 0.06);\r\n\tborder-radius: 5px;\r\n\tpadding: 1rem;\r\n\tdisplay: grid;\r\n\tgrid-gap: 1rem;\r\n`;\r\n\r\n// If you run into an issue with client request to stripe, just disable any ad-blocker as it may cause issue for request to go back and fort\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nconst [error, setError] = useState();\r\nconst [loading, setLoading] = useState(false);\r\nconst stripe = useStripe();\r\n\r\nfunction handleSubmit(e) {\r\n\t// 1. Stop the form from submitting and turn the loader on\r\n\te.preventDefault();\r\n\r\n\t// 2. Start the page transition\r\n\r\n\t// 3. Create the payment method via stripe (Token come back here)\r\n\r\n\t// 4. Handle any errors from stripe\r\n\r\n\t// 5. Send the token from step 3 to the backend keystone via a custom mutation\r\n\r\n\t// 6. Change the page to view the order\r\n\r\n\t// 7. Close the cart\r\n\r\n\t// 8. Turn the loader off\r\n}\r\n\r\nfunction CheckoutForm() {\r\n\treturn (\r\n\t\t<CheckoutFormStyles onSubmit={handleSubmit}>\r\n\t\t\t<CardElement />\r\n\t\t\t<SickButtom>Check out now</SickButtom>\r\n\t\t</CheckoutFormStyles>\r\n\t);\r\n}\r\n\r\nfunction CheckOut() {\r\n\treturn (\r\n\t\t<Elements stripe={stripeLib}>\r\n\t\t\t<CheckoutForm />\r\n\t\t</Elements>\r\n\t);\r\n}\r\n\r\nexport default CheckOut;\r\n"]},"metadata":{},"sourceType":"module"}
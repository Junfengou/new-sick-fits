{"ast":null,"code":"import _regeneratorRuntime from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation CREATE_ORDER_MUTATION($token: String!) {\\n\\t\\tcheckout(token: $token) {\\n\\t\\t\\tid\\n\\t\\t\\tcharge\\n\\t\\t\\ttotal\\n\\t\\t\\titems {\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\tname\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { useState } from \"react\";\nimport nProgress from \"nprogress\";\nimport SickButton from \"./styles/SickButton\";\nimport gql from \"graphql-tag\";\nimport { GraphQLError } from \"graphql\";\nimport { useMutation } from \"@apollo/client\";\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      CREATE_ORDER_MUTATION = _useMutation2[0],\n      GraphQLError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 1. Stop the form from submitting and turn the loader one\n              e.preventDefault();\n              setLoading(true);\n              console.log(\"We gotta do some work..\"); // 2. Start the page transition\n\n              nProgress.start(); // 3. Create the payment method via stripe (Token comes back here if successful)\n\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); // 4. Handle any errors from stripe\n\n              if (error) {\n                setError(error);\n              } // 5. Send the token from step 3 to our keystone server, via a custom mutation!\n              // 6. Change the page to view the order\n              // 7. Close the cart\n              // 8. turn the loader off\n\n\n              setLoading(false);\n              nProgress.done();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CheckoutForm, \"8AWeXXq7l4vNble2QicqAH+avaQ=\", false, function () {\n  return [useStripe, useElements, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","useState","nProgress","SickButton","gql","GraphQLError","useMutation","CREATE_ORDER_MUTATION","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","console","log","start","createPaymentMethod","type","card","getElement","paymentMethod","done","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n\tCardElement,\r\n\tElements,\r\n\tuseElements,\r\n\tuseStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useState } from \"react\";\r\nimport nProgress from \"nprogress\";\r\nimport SickButton from \"./styles/SickButton\";\r\nimport gql from \"graphql-tag\";\r\nimport { GraphQLError } from \"graphql\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n\tmutation CREATE_ORDER_MUTATION($token: String!) {\r\n\t\tcheckout(token: $token) {\r\n\t\t\tid\r\n\t\t\tcharge\r\n\t\t\ttotal\r\n\t\t\titems {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n\tbox-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n\tborder: 1px solid rgba(0, 0, 0, 0.06);\r\n\tborder-radius: 5px;\r\n\tpadding: 1rem;\r\n\tdisplay: grid;\r\n\tgrid-gap: 1rem;\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n\tconst [error, setError] = useState();\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst stripe = useStripe();\r\n\tconst elements = useElements();\r\n\r\n\tconst [CREATE_ORDER_MUTATION, { error: GraphQLError }] = useMutation(\r\n\t\tCREATE_ORDER_MUTATION\r\n\t);\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\t// 1. Stop the form from submitting and turn the loader one\r\n\t\te.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\tconsole.log(\"We gotta do some work..\");\r\n\r\n\t\t// 2. Start the page transition\r\n\t\tnProgress.start();\r\n\r\n\t\t// 3. Create the payment method via stripe (Token comes back here if successful)\r\n\t\tconst { error, paymentMethod } = await stripe.createPaymentMethod({\r\n\t\t\ttype: \"card\",\r\n\t\t\tcard: elements.getElement(CardElement),\r\n\t\t});\r\n\t\tconsole.log(paymentMethod);\r\n\r\n\t\t// 4. Handle any errors from stripe\r\n\t\tif (error) {\r\n\t\t\tsetError(error);\r\n\t\t}\r\n\r\n\t\t// 5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n\t\t// 6. Change the page to view the order\r\n\t\t// 7. Close the cart\r\n\r\n\t\t// 8. turn the loader off\r\n\t\tsetLoading(false);\r\n\t\tnProgress.done();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CheckoutFormStyles onSubmit={handleSubmit}>\r\n\t\t\t{error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n\t\t\t<CardElement />\r\n\t\t\t<SickButton>Check Out Now</SickButton>\r\n\t\t</CheckoutFormStyles>\r\n\t);\r\n}\r\n\r\nfunction Checkout() {\r\n\treturn (\r\n\t\t<Elements stripe={stripeLib}>\r\n\t\t\t<CheckoutForm />\r\n\t\t</Elements>\r\n\t);\r\n}\r\n\r\nexport { Checkout };\r\n"]},"metadata":{},"sourceType":"module"}
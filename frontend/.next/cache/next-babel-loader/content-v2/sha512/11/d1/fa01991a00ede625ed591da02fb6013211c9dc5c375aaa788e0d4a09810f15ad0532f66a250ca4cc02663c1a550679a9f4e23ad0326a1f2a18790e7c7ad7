{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Reset.js\";\nimport React from \"react\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { useMutation } from \"@apollo/client\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nconst RESET_MUTATION = gql`\n\tmutation RESET_MUTATION(\n\t\t$email: String!\n\t\t$token: String!\n\t\t$password: String!\n\t) {\n\t\tredeemUserPasswordResetToken(\n\t\t\temail: $email\n\t\t\ttoken: $token\n\t\t\tpassword: $password\n\t\t) {\n\t\t\tcode\n\t\t\tmessage\n\t\t}\n\t}\n`;\n\nfunction Reset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\",\n    password: \"\",\n    token: \"\"\n  });\n  const [redeemUserPasswordResetToken, {\n    data,\n    error,\n    loading\n  }] = useMutation(RESET_MUTATION, {\n    variables: inputs\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // console.log(inputs);\n    // Send the email and password to graphql API\n\n    await redeemUserPasswordResetToken().catch(console.error);\n    resetForm();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! You can now sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Reset;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/Reset.js"],"names":["React","Form","useForm","gql","Router","useMutation","CURRENT_USER_QUERY","Error","RESET_MUTATION","Reset","inputs","handleChange","resetForm","email","password","token","redeemUserPasswordResetToken","data","error","loading","variables","handleSubmit","e","preventDefault","catch","console"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,cAAc,GAAGL,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,SAASM,KAAT,GAAiB;AAChB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCV,OAAO,CAAC;AACnDW,IAAAA,KAAK,EAAE,EAD4C;AAEnDC,IAAAA,QAAQ,EAAE,EAFyC;AAGnDC,IAAAA,KAAK,EAAE;AAH4C,GAAD,CAAnD;AAMA,QAAM,CAACC,4BAAD,EAA+B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAA/B,IAA2Dd,WAAW,CAC3EG,cAD2E,EAE3E;AACCY,IAAAA,SAAS,EAAEV;AADZ,GAF2E,CAA5E;;AAOA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC9BA,IAAAA,CAAC,CAACC,cAAF,GAD8B,CAE9B;AAEA;;AACA,UAAMP,4BAA4B,GAAGQ,KAA/B,CAAqCC,OAAO,CAACP,KAA7C,CAAN;AACAN,IAAAA,SAAS;AACT;;AAED,sBACC,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAES,YAA9B;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEH;AAAd;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,iBACE,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAED,4BAAN,MAAuC,IAAvC,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKC;AAAA,yCAEC;AACC,UAAA,IAAI,EAAC,OADN;AAEC,UAAA,IAAI,EAAC,OAFN;AAGC,UAAA,WAAW,EAAC,OAHb;AAIC,UAAA,YAAY,EAAC,OAJd;AAKC,UAAA,KAAK,EAAEN,MAAM,CAACG,KALf;AAMC,UAAA,QAAQ,EAAEF;AANX;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAiBC;AAAA,4CAEC;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,IAAI,EAAC,UAFN;AAGC,UAAA,WAAW,EAAC,UAHb;AAIC,UAAA,KAAK,EAAED,MAAM,CAACI,QAJf;AAKC,UAAA,QAAQ,EAAEH;AALX;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBD,eA4BC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoCA;;AAED,eAAeF,KAAf","sourcesContent":["import React from \"react\";\r\nimport Form from \"./styles/Form\";\r\nimport useForm from \"../lib/useForm\";\r\nimport gql from \"graphql-tag\";\r\nimport Router from \"next/router\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport Error from \"./ErrorMessage\";\r\n\r\nconst RESET_MUTATION = gql`\r\n\tmutation RESET_MUTATION(\r\n\t\t$email: String!\r\n\t\t$token: String!\r\n\t\t$password: String!\r\n\t) {\r\n\t\tredeemUserPasswordResetToken(\r\n\t\t\temail: $email\r\n\t\t\ttoken: $token\r\n\t\t\tpassword: $password\r\n\t\t) {\r\n\t\t\tcode\r\n\t\t\tmessage\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction Reset() {\r\n\tconst { inputs, handleChange, resetForm } = useForm({\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\ttoken: \"\",\r\n\t});\r\n\r\n\tconst [redeemUserPasswordResetToken, { data, error, loading }] = useMutation(\r\n\t\tRESET_MUTATION,\r\n\t\t{\r\n\t\t\tvariables: inputs,\r\n\t\t}\r\n\t);\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\t// console.log(inputs);\r\n\r\n\t\t// Send the email and password to graphql API\r\n\t\tawait redeemUserPasswordResetToken().catch(console.error);\r\n\t\tresetForm();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form method=\"POST\" onSubmit={handleSubmit}>\r\n\t\t\t<h2>Reset your password</h2>\r\n\t\t\t<Error error={error} />\r\n\t\t\t<fieldset>\r\n\t\t\t\t{data?.redeemUserPasswordResetToken === null && (\r\n\t\t\t\t\t<p>Success! You can now sign in</p>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tEmail\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"email\"\r\n\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\tvalue={inputs.email}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tPassword\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t\t\tvalue={inputs.password}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<button type=\"submit\">Request Password Reset</button>\r\n\t\t\t</fieldset>\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nexport default Reset;\r\n"]},"metadata":{},"sourceType":"module"}
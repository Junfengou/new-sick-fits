{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\pages\\\\order\\\\[id].js\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport OrderStyles from \"../../components/styles/OrderStyles\";\nimport { useQuery } from \"@apollo/client\";\nconst SINGLE_ORDER_QUERY = gql`\n\tquery SINGLE_ORDER_QUERY($id: ID!) {\n\t\torder: Order(where: { id: $id }) {\n\t\t\tid\n\t\t\tcharge\n\t\t\ttotal\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t}\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tquantity\n\t\t\t\tprice\n\t\t\t\tphoto {\n\t\t\t\t\timage {\n\t\t\t\t\t\tpublicUrlTransformed\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction SingleOrder({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 20\n  }, this);\n  const {\n    order\n  } = data;\n  console.log(order);\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\nexport default SingleOrder;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/pages/order/[id].js"],"names":["React","gql","ErrorMessage","OrderStyles","useQuery","SINGLE_ORDER_QUERY","SingleOrder","query","data","error","loading","variables","id","order","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,MAAMC,kBAAkB,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;;AAyBA,SAASK,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAgC;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BN,QAAQ,CAACC,kBAAD,EAAqB;AAC7DM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEL,KAAK,CAACK;AAAZ;AADkD,GAArB,CAAzC;AAGA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAM;AAAEI,IAAAA;AAAF,MAAYL,IAAlB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport OrderStyles from \"../../components/styles/OrderStyles\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n\tquery SINGLE_ORDER_QUERY($id: ID!) {\r\n\t\torder: Order(where: { id: $id }) {\r\n\t\t\tid\r\n\t\t\tcharge\r\n\t\t\ttotal\r\n\t\t\tuser {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\titems {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tdescription\r\n\t\t\t\tquantity\r\n\t\t\t\tprice\r\n\t\t\t\tphoto {\r\n\t\t\t\t\timage {\r\n\t\t\t\t\t\tpublicUrlTransformed\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction SingleOrder({ query }) {\r\n\tconst { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n\t\tvariables: { id: query.id },\r\n\t});\r\n\tif (loading) return <p>Loading...</p>;\r\n\tif (error) return <ErrorMessage error={error} />;\r\n\r\n\tconst { order } = data;\r\n\tconsole.log(order);\r\n\r\n\treturn <OrderStyles></OrderStyles>;\r\n}\r\n\r\nexport default SingleOrder;\r\n"]},"metadata":{},"sourceType":"module"}
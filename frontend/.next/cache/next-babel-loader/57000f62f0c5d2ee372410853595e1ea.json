{"ast":null,"code":"import _regeneratorRuntime from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Toppest level as any component/page may go. If you want something to live in every page, this is the place to do it\nimport Page from \"../components/Page\";\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\"; // TODO : swap with your own\n// import \"nprogress/nprogress.css\";\n\nimport \"../components/styles/nprogress.css\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport withData from \"../lib/withData\";\nRouter.events.on(\"routeChangeStart\", function () {\n  return NProgress.start();\n});\nRouter.events.on(\"routeChangeComplete\", function () {\n  return NProgress.done();\n});\nRouter.events.on(\"routeChangeError\", function () {\n  return NProgress.done();\n});\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      apollo = _ref.apollo;\n  // console.log(apollo);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: apollo,\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n/*\r\n\tIf any page have this method, we'll await the fetch request\r\n*/\n\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var Component, ctx, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref2.Component, ctx = _ref2.ctx;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(ctx);\n\n          case 5:\n            pageProps = _context.sent;\n\n          case 6:\n            pageProps.query = ctx.query;\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withData(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/pages/_app.js"],"names":["Page","Router","NProgress","ApolloProvider","withData","events","on","start","done","MyApp","Component","pageProps","apollo","getInitialProps","ctx","query"],"mappings":";;;;;;;;;;AAAA;AAEA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAEA;AACA;;AACA,OAAO,oCAAP;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEAH,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC;AAAA,SAAMJ,SAAS,CAACK,KAAV,EAAN;AAAA,CAArC;AACAN,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC;AAAA,SAAMJ,SAAS,CAACM,IAAV,EAAN;AAAA,CAAxC;AACAP,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC;AAAA,SAAMJ,SAAS,CAACM,IAAV,EAAN;AAAA,CAArC;;AAEA,SAASC,KAAT,OAAiD;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAChD;AACA,sBACC,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,MAAxB;AAAA,2BACC,QAAC,IAAD;AAAA,6BACC,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;AAED;AACA;AACA;;;KAbSF,K;;AAeTA,KAAK,CAACI,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBH,YAAAA,SAAlB,SAAkBA,SAAlB,EAA6BI,GAA7B,SAA6BA,GAA7B;AACnBH,YAAAA,SADmB,GACP,EADO;;AAAA,iBAEnBD,SAAS,CAACG,eAFS;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGJH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAHI;;AAAA;AAGtBH,YAAAA,SAHsB;;AAAA;AAKvBA,YAAAA,SAAS,CAACI,KAAV,GAAkBD,GAAG,CAACC,KAAtB;AALuB,6CAMhB;AAAEJ,cAAAA,SAAS,EAATA;AAAF,aANgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AASA,qBAAeP,QAAQ,CAACK,KAAD,CAAvB","sourcesContent":["// Toppest level as any component/page may go. If you want something to live in every page, this is the place to do it\r\n\r\nimport Page from \"../components/Page\";\r\nimport Router from \"next/router\";\r\nimport NProgress from \"nprogress\";\r\n\r\n// TODO : swap with your own\r\n// import \"nprogress/nprogress.css\";\r\nimport \"../components/styles/nprogress.css\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport withData from \"../lib/withData\";\r\n\r\nRouter.events.on(\"routeChangeStart\", () => NProgress.start());\r\nRouter.events.on(\"routeChangeComplete\", () => NProgress.done());\r\nRouter.events.on(\"routeChangeError\", () => NProgress.done());\r\n\r\nfunction MyApp({ Component, pageProps, apollo }) {\r\n\t// console.log(apollo);\r\n\treturn (\r\n\t\t<ApolloProvider client={apollo}>\r\n\t\t\t<Page>\r\n\t\t\t\t<Component {...pageProps} />\r\n\t\t\t</Page>\r\n\t\t</ApolloProvider>\r\n\t);\r\n}\r\n\r\n/*\r\n\tIf any page have this method, we'll await the fetch request\r\n*/\r\n\r\nMyApp.getInitialProps = async function ({ Component, ctx }) {\r\n\tlet pageProps = {};\r\n\tif (Component.getInitialProps) {\r\n\t\tpageProps = await Component.getInitialProps(ctx);\r\n\t}\r\n\tpageProps.query = ctx.query;\r\n\treturn { pageProps };\r\n};\r\n\r\nexport default withData(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}
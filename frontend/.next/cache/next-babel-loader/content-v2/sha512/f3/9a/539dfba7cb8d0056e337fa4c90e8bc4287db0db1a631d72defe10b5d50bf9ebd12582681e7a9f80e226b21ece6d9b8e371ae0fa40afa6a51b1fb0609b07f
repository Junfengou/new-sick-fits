{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\pages\\\\order\\\\[id].js\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport OrderStyles from \"../../components/styles/OrderStyles\";\nimport Head from \"next/head\";\nimport formatMoney from \"../../lib/formatMoney\";\nimport { useQuery } from \"@apollo/client\";\nconst SINGLE_ORDER_QUERY = gql`\n\tquery SINGLE_ORDER_QUERY($id: ID!) {\n\t\torder: Order(where: { id: $id }) {\n\t\t\tid\n\t\t\tcharge\n\t\t\ttotal\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t}\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tquantity\n\t\t\t\tprice\n\t\t\t\tphoto {\n\t\t\t\t\timage {\n\t\t\t\t\t\tpublicUrlTransformed\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction SingleOrder({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 20\n  }, this);\n  const {\n    order\n  } = data;\n  console.log(order);\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMoney(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Qty: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Each: \", formatMoney(item.price)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sub total: \", formatMoney(item.price * item.quantity)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.description, \"blllllah\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\nexport default SingleOrder;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/pages/order/[id].js"],"names":["React","gql","ErrorMessage","OrderStyles","Head","formatMoney","useQuery","SINGLE_ORDER_QUERY","SingleOrder","query","data","error","loading","variables","id","order","console","log","charge","total","items","length","map","item","photo","image","publicUrlTransformed","title","name","quantity","price","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport OrderStyles from \"../../components/styles/OrderStyles\";\r\nimport Head from \"next/head\";\r\nimport formatMoney from \"../../lib/formatMoney\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n\tquery SINGLE_ORDER_QUERY($id: ID!) {\r\n\t\torder: Order(where: { id: $id }) {\r\n\t\t\tid\r\n\t\t\tcharge\r\n\t\t\ttotal\r\n\t\t\tuser {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\titems {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tdescription\r\n\t\t\t\tquantity\r\n\t\t\t\tprice\r\n\t\t\t\tphoto {\r\n\t\t\t\t\timage {\r\n\t\t\t\t\t\tpublicUrlTransformed\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction SingleOrder({ query }) {\r\n\tconst { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n\t\tvariables: { id: query.id },\r\n\t});\r\n\tif (loading) return <p>Loading...</p>;\r\n\tif (error) return <ErrorMessage error={error} />;\r\n\r\n\tconst { order } = data;\r\n\tconsole.log(order);\r\n\r\n\treturn (\r\n\t\t<OrderStyles>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>Sick Fits - {order.id}</title>\r\n\t\t\t</Head>\r\n\t\t\t<p>\r\n\t\t\t\t<span>Order ID:</span>\r\n\t\t\t\t<span>{order.id}</span>\r\n\t\t\t</p>\r\n\r\n\t\t\t<p>\r\n\t\t\t\t<span>Charge:</span>\r\n\t\t\t\t<span>{order.charge}</span>\r\n\t\t\t</p>\r\n\r\n\t\t\t<p>\r\n\t\t\t\t<span>Order Total:</span>\r\n\t\t\t\t<span>{formatMoney(order.total)}</span>\r\n\t\t\t</p>\r\n\r\n\t\t\t<p>\r\n\t\t\t\t<span>Order count:</span>\r\n\t\t\t\t<span>{order.items.length}</span>\r\n\t\t\t</p>\r\n\r\n\t\t\t<div className=\"items\">\r\n\t\t\t\t{order.items.map((item) => (\r\n\t\t\t\t\t<div className=\"order-item\" key={item.id}>\r\n\t\t\t\t\t\t<img src={item.photo.image.publicUrlTransformed} alt={item.title} />\r\n\t\t\t\t\t\t<div className=\"item-details\">\r\n\t\t\t\t\t\t\t<h2>{item.name}</h2>\r\n\t\t\t\t\t\t\t<p>Qty: {item.quantity}</p>\r\n\t\t\t\t\t\t\t<p>Each: {formatMoney(item.price)}</p>\r\n\t\t\t\t\t\t\t<p>Sub total: {formatMoney(item.price * item.quantity)}</p>\r\n\t\t\t\t\t\t\t<p>{item.description}blllllah</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</OrderStyles>\r\n\t);\r\n}\r\n\r\nexport default SingleOrder;\r\n"]},"metadata":{},"sourceType":"module"}
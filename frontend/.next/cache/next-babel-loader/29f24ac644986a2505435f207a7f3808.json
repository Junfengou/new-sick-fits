{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/React/Advanced-React/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\Advanced-React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\SingleProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery SINGLE_ITEM_QUERY($id: ID!) {\\n\\t\\tProduct(where: { id: $id }) {\\n\\t\\t\\tname\\n\\t\\t\\tprice\\n\\t\\t\\tdescription\\n\\t\\t\\tphoto {\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\timage {\\n\\t\\t\\t\\t\\tpublicUrlTransformed\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\n\nfunction SingleProductPage(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  console.log(data);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 20\n  }, this);\n  var _data$Product = data.Product,\n      name = _data$Product.name,\n      price = _data$Product.price,\n      description = _data$Product.description;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SingleProductPage, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleProductPage;\nexport default SingleProductPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProductPage\");","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/SingleProduct.js"],"names":["React","useQuery","gql","DisplayError","SINGLE_ITEM_QUERY","SingleProductPage","id","variables","data","loading","error","console","log","Product","name","price","description"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;;AAgBA,SAASG,iBAAT,OAAmC;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACDL,QAAQ,CAACG,iBAAD,EAAoB;AAC5DG,IAAAA,SAAS,EAAE;AACVD,MAAAA,EAAE,EAAFA;AADU;AADiD,GAApB,CADP;AAAA,MAC1BE,IAD0B,aAC1BA,IAD0B;AAAA,MACpBC,OADoB,aACpBA,OADoB;AAAA,MACXC,KADW,aACXA,KADW;;AAOlCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAVuB,sBAc9BF,IAd8B,CAajCK,OAbiC;AAAA,MAatBC,IAbsB,iBAatBA,IAbsB;AAAA,MAahBC,KAbgB,iBAahBA,KAbgB;AAAA,MAaTC,WAbS,iBAaTA,WAbS;AAgBlC,sBACC;AAAA,4BACC;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;GAtBQV,iB;UACyBJ,Q;;;KADzBI,iB;AAwBT,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport DisplayError from \"./ErrorMessage\";\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n\tquery SINGLE_ITEM_QUERY($id: ID!) {\r\n\t\tProduct(where: { id: $id }) {\r\n\t\t\tname\r\n\t\t\tprice\r\n\t\t\tdescription\r\n\t\t\tphoto {\r\n\t\t\t\tid\r\n\t\t\t\timage {\r\n\t\t\t\t\tpublicUrlTransformed\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction SingleProductPage({ id }) {\r\n\tconst { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t},\r\n\t});\r\n\r\n\tconsole.log(data);\r\n\r\n\tif (loading) return <p>Loading...</p>;\r\n\tif (error) return <DisplayError error={error} />;\r\n\r\n\tconst {\r\n\t\tProduct: { name, price, description },\r\n\t} = data;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{price}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SingleProductPage;\r\n"]},"metadata":{},"sourceType":"module"}
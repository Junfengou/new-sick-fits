{"ast":null,"code":"import { gql, useQuery } from \"@apollo/client\";\n/*\r\n\tThis is used in the [ <Nav /> ]\r\n\r\n    It is very important to remember that the [authenticatedItem] returns a union type, meaning it's capable of returning multiple types\r\n    This is keystone specific: \r\n        authenticatedItem\r\n*/\n\nexport const CURRENT_USER_QUERY = gql`\n\tquery {\n\t\tauthenticatedItem {\n\t\t\t... on User {\n\t\t\t\tid\n\t\t\t\temail\n\t\t\t\tname\n\t\t\t\t# Todo: Query the cart once we have it\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction useUser() {\n  const {\n    data\n  } = useQuery(CURRENT_USER_QUERY);\n  return data === null || data === void 0 ? void 0 : data.authenticatedItem;\n}\n\nexport default useUser;","map":{"version":3,"sources":["D:/React/Advanced-React/Advanced-React/sick-fits/frontend/components/User.js"],"names":["gql","useQuery","CURRENT_USER_QUERY","useUser","data","authenticatedItem"],"mappings":"AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAGF,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;;AAaP,SAASG,OAAT,GAAmB;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,QAAQ,CAACC,kBAAD,CAAzB;AACA,SAAOE,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEC,iBAAb;AACA;;AAED,eAAeF,OAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\n\r\n/*\r\n\tThis is used in the [ <Nav /> ]\r\n\r\n    It is very important to remember that the [authenticatedItem] returns a union type, meaning it's capable of returning multiple types\r\n    This is keystone specific: \r\n        authenticatedItem\r\n*/\r\n\r\nexport const CURRENT_USER_QUERY = gql`\r\n\tquery {\r\n\t\tauthenticatedItem {\r\n\t\t\t... on User {\r\n\t\t\t\tid\r\n\t\t\t\temail\r\n\t\t\t\tname\r\n\t\t\t\t# Todo: Query the cart once we have it\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction useUser() {\r\n\tconst { data } = useQuery(CURRENT_USER_QUERY);\r\n\treturn data?.authenticatedItem;\r\n}\r\n\r\nexport default useUser;\r\n"]},"metadata":{},"sourceType":"module"}